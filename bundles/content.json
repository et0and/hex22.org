{"/blog":{"title":"Writings","view":"blog","entriesPerPage":"5","name":"blog","path":"/content/blog","url":"/blog","files":{},"pages":{"are-you-the-owner":{"name":"are-you-the-owner","path":"/content/blog/are-you-the-owner","url":"/blog/are-you-the-owner","source":"/content/blog/are-you-the-owner"},"atomic-social-networks":{"name":"atomic-social-networks","path":"/content/blog/atomic-social-networks","url":"/blog/atomic-social-networks","source":"/content/blog/atomic-social-networks"},"being-a-peer":{"name":"being-a-peer","path":"/content/blog/being-a-peer","url":"/blog/being-a-peer","source":"/content/blog/being-a-peer"},"ntain":{"name":"ntain","path":"/content/blog/ntain","url":"/blog/ntain","source":"/content/blog/ntain"},"pictogon":{"name":"pictogon","path":"/content/blog/pictogon","url":"/blog/pictogon","source":"/content/blog/pictogon"},"reverse-engineering-future-into-daily-tasks":{"name":"reverse-engineering-future-into-daily-tasks","path":"/content/blog/reverse-engineering-future-into-daily-tasks","url":"/blog/reverse-engineering-future-into-daily-tasks","source":"/content/blog/reverse-engineering-future-into-daily-tasks"},"update":{"name":"update","path":"/content/blog/update","url":"/blog/update","source":"/content/blog/update"}}},"/blog/are-you-the-owner":{"title":"Are you the owner?","view":"entry","date":"2018-03-20","excerpt":"About peer-to-peer publishing.\n\nOn a free and loosely definable space, like the internet, the whole system's based on ownership. Different locations are owned by countries, corporations and people, just like on the surface of the Earth (though it's much more challening to draw the boundaries of the former).","location":"Odorheiu Secuiesc","visible":true,"text":"I have this vision about a utopian system where a piece of land has no owner ― it's free to use by anyone, but the permission is restricted to usage only. People are not allowed to expropriate the land ― that means no fence, no legal ownership. I know: this isn't a system that could be realized for many reasons (stealing, lowering soil quality, etc.), but it's a concept I like to think about. We could all work how much we want and get profit based on our effort (professions are metaphorically limited to agriculture). \n\nWe can also apply this to the context of the web.\n\n**What if no subspaces of the internet would be owned?** What is a *subspace* on the internet, anyway? First of all, it must be something that can be seen (metaphorically) as a space ― it's in \"READY state\"^1^ and its emptiness is its functionality. It also has some metadata in order to help you access and specify it (geolocation, IDs, URLs, ...).\n\nWe can initiate many spaces in a context by using different perspectives. As the web is a gigantic network of computers, I would see these ― the **computers** ― **as subspaces**.\n\n*In the HTTP universe* **1 computer** mostly equals to **1 site** as you can access it by the machine's IP address. This limits you in the number of sites you would like to publish: most hosting services don't sell cheap hosting plans for small and simple sites and it's also some time to setup them.\n\n*On the peer-to-peer web* you can start a site anarchistically, without depending on domain name registrars and cloud storage services. There's no need to own a piece of web-land, you're free to have as many sites as you want without the need to pay for anything ― and you don't need another computer besides your personal one.\n\nI see the peer-to-peer web similar to the utopia of not-owning. \n\n―\n\nThe `DatArchive` API has a brilliant function called `isOwner()`. It's very simple: returns `true` if the visitor is the owner of the site and `false` otherwise.\n\nThis removes the need of authentication.\n\nI've got interested in interfaces that use this powerful function. Most content management systems have an isolated panel / admin page, where through authentication you can get permission to edit the content. There's no need for this on the peer-to-peer web: the same interface ― under same `dat://` URL ― can be used to read and to edit the content, without any action from the user. The interface can automatically react to a visitor and to its owner.\n\nI've made two tools that use this concept: [orkl](https://github.com/kodedninja/orkl) and [solo](https://github.com/kodedninja/solo).\n\n### orkl\n\nI wanted to build a peer-to-peer only blog (though, later I've included the `http://` accessibility too). [Orkl](https://orkl-kodedninja.hashbase.io) has a simple, text-focused blog interface. The index page shows all the published entries in a chronological order and that's all it can do. But when you want to start a blog, orkl is in ready state. No setup, no admin registration: just copy the site and you can start publishing.\n\nOther than the few buttons that appear for the owner, it's the same interface for the visitor.\n\n![Screenshot of orkl](/content/blog/are-you-the-owner/orkl.png)\n\n### solo\n\n[Solo](https://solo-kodedninja.hashbase.io) is a publication tool for one-page pubications: the entries are not presented in a collective way, like on blogs, magazines. All the entries exist under different `dat://` URLs. When the owner visits the site the editor appears, when it's just a visitor, the formatted version of the text renders.\n\n---\n\n### References\n\n1. [New Computers Working Group / Ready to Use](dat://newcomputers.group/ready2use.html)","name":"are-you-the-owner","path":"/content/blog/are-you-the-owner","url":"/blog/are-you-the-owner","files":{"orkl.png":{"name":"orkl","path":"/content/blog/are-you-the-owner/orkl.png","url":"/blog/are-you-the-owner/orkl.png","source":"/content/blog/are-you-the-owner/orkl.png","extension":".png","filename":"orkl.png","type":"image"}},"pages":{}},"/blog/atomic-social-networks":{"title":"Atomic Social Networks","view":"entry","date":"2019-07-11","location":"Linz","excerpt":"Nowadays, social networks seem to rule the internet — from big players, who wish to own the entire world, to smaller ones, who want nothing more than to give a slightly different experience for their users. “Shadow” social networks are everywhere, forming a web of dependency loops.","text":"Gaming, ordering food, traveling, learning, running, etc. can all include connections to friends, a feed or a gamified social experience and we're unconscious of the majority of them — companies try to bind users to their platforms through their relations to other users, through memories left in infinitely absorbing feeds, through our basic human need to socialize. This has become a crucial part of our cyborg lives.\n\nIn the following paragraphs, you'll read about my approach which indicates what a social network can / should be. Later, in the section at the bottom of the page, you can read a quick note about my [**twtxt**](https://github.com/buckket/twtxt) setup, as this made me think about social networks at all.\n\n\n### Motivation\n\nSome time ago I've stumbled upon a lovely project called [**twtxt**](https://github.com/buckket/twtxt), but as none of my internet peers were using it, I didn't spend time on the joining process. Recently, more and more posts appeared about the project in our lovely group's [Mastodon feed](https://merveilles.town/) and I've decided to set it up (see the bottom section for details about this). Its simplicity / user experience ratio made me curious about social networking as a feature and its use-cases.\n\nOn the project's website, **twtxt** is described as “a decentralised, minimalist microblogging service\" (understand: a distributed Twitter, in the terminal). It is a group of files following a fixed format and made accessible through HTTP. The **twtxt** CLI tool only edits the file that contains your feed and fetches the files of those who you follow. This is done by using URLs pointing directly to those files on some server; there's no magic involved.\n\nExample: as I prefer using the username `kodedninja` on the web, you could follow me via:\n\n```\n$ twtxt follow kodedninja https://t.seed.hex22.org/twtxt.txt\n\n```\n\nThe next time you check your timeline, the \"tweets\" from the file located at that URL will also be included.\n\nUsing **twtxt** reminded me of the times spent on **Rotonde** and made me think about “what is a social network?” What _makes_ something into a social network? And how can social networking enhance the experience of a platform and not destroy it? Or more precisely: where is the divide between (for example) a social network with code sharing and collaboration capabilities and a collaborative version control tool with social networking features.\n\n\n\n\n### What is a social network?\n\nIn late 2017 the same group as mentioned above was active on a self-built social network called [Rotonde](https://github.com/Rotonde), initiated by [Devine](https://wiki.xxiivv.com/), which worked (roughly) in a similar way as **twtxt**, but with a web interface and with a few more features. I see Rotonde as a great example of something I would call a _complete_ _atomic social network._ I'll break this down.\n\nRotonde was based on the [Beaker Browser](https://beakerbrowser.com/) and its `DatArchive` API — here these two are seen as the **channel**. By using this API, Rotonde interconnected a set of JSON files, which contained every user's feed (posts) and some meta-information, following a common **format**.\n\n```\n{\n  \"name\": \"neauoire\",\n  \"desc\": \"It's always night under the ultraviolet sun.\",\n  \"port\": [\n    \"dat://0cd187bbe6a44b0462d4bc3.....fb3b11e33621c307e275c96/\n  ],\n  \"feed\": [\n    {\n      \"message\": \"Oh my goodness, I located a pretty {*evil*} bug.\",\n      \"timestamp\": 1508136223906,\n      \"editstamp\": 1508136856680\n    }\n  ],\n  \"dat\": \"dat://2f21e3c122ef0f2555d3a9....b0383f998a2d37c02c042d598485/\"\n}\n\n```\n\nExample of Rotonde's portal.json\n\nI think these are the requirements of an _atomic social network_. A **format** understood and accepted by everyone in the network (which is a requirement of becoming a member) and a **channel**, through which information is delivered (all users should have the same access to the channel). It's _incomplete_ because it lacks a feature: **discoverability** — users can only discover the yet unknown parts of the network using external sources, so their personal network can only grow by absorbing external information. This means that in an isolated environment (an environment limited by the edges of the network) a member could never find another member — these networks cannot sustain themselves on their own. In the case of Rotonde, through other users' following list you were able to discover new members (`port` field in the JSON), but **twtxt** feeds lack of this information.\n\nTo stay on the side of truthiness and reality, we must mention that social networks are always absorbing external information, so we might say, that **discoverability** shouldn't be a distinctive factor. What they do is nothing more than absorbing and showing information from one user to others. But I would like to ignore thinking about content here, as that is not a building block of the network itself. The characteristics of a network are those that are present at its beginning state. So, while in reality, you can discover other users in **twtxt** too, through the tweets and mentions of those who you follow, this functionality is not part of **twtxt** itself.\n\nDepending on the kind of the **channel**, social networks can be _anonymous _or _onymous_. In the first one, members  to own an identity within the network (as a consequence, if they want, they can own more than one identities). Examples could be a public wall onto which “users” write messages, a common postbox where they leave letters or even a public computer's filesystem. As users don't have an identity, they don't have a personal network either, meaning that everyone knows the entirety of the network and there's no need for **discoverability**. Whether we accept this and call these networks _complete_ or not depends on some of their characteristics, such as: is it big and diverse enough, so that the members can “live a pleased life” (they get enough information out of the network that they keep willing to be parts of it)^1^ and the network can sustain itself?\n\nSimilarly, onymous networks are the ones, in which members have to own an  identity and this can differ from a username, to a URL or a public hash key.\n\nWithin onymous networks, there's always a chance to discover the yet unknown, and by the constant growth of the personal networks, the global network experiences change and stays alive. Both here and in the paragraph discussing anonymous networks we accept, that the network started in an empty state and that new members are joining, so it's ever-expanding.\n\nOnymous networks emphasize (and in some cases enable) user-to-user interactions and through these, user-to-user _relations_, whilst anonymous ones only enable user-to-group interactions.\n\nSo, to have a _complete atomic social network,_ we need a **format**, an onymous **channel** and a **way to discover** the yet unknown parts of the global network (growing our personal network). And we should stop here. Or even before that. \n\nSocial networking (as a feature) doesn't always have to be _complete —_ in many cases **discoverability** is neglectable.\n\nI believe that all other social networking features of a product that do not prioritize and strengthen these three building blocks, are weakening the _social_ _experience_ and only increase the friction between users, groups and even between us and our _selves_ on the internet.\n\nI also believe that integrating atomic social networking experiences into products would have a positive impact on how people use / relate to their digital tools (and digital life) and it would show the real potential of personal computing augmented to everyday tasks, but this should never become more important than the original purpose of the platform / tool.\n\nThere are already a few examples of projects  integrating social / collaboration features into their core idea, both small and big, and I hope more and more products (and experiments) will appear in the near future. But the most important thing is to be able to keep social networking only on a _feature_ level, and not as an _identity_.\n\n_Note: I like to think about physical places here, such as libraries or parks, where your main goal isn't necessarily to socialize, but it is still an action involving social interactions and meeting like-minded people or to projects like:_\n\n* [_Castle_](https://castle.games) — _making and playing games together^2^_\n* [_Are.na_](https://www.are.na) — _space for collaborative research_\n* [_Reading Supply_](https://reading.supply) — _writing / thinking together^2^_\n* [_Werkbank_](https://vimeo.com/157990864) — _somewhere between physical and digital (maybe a physical Are.na?)_\n\n\n\n### twtxt, DAT & _Hallway_ — a real-time twtxt setup\n\nThe thing is: you need to host your `twtxt.txt` file somewhere. I didn't want to use **twtxt** directly on a web-server, or to use GitHub to host the file and commit every time I “tweet” something, so I asked my good friend, DAT, to come and help.\n\nI made a fresh directory and set up a background service that seeds this via the `dat` [CLI](https://npmjs.com/package/dat) (I'm using [`pm2`](https://npmjs.com/package/pm2) to run services on my machine). Then I installed the [**twtxt** CLI tool](https://github.com/buckket/twtxt) and used the `quickstart` option to set it up, and point it to a file in the newly created directory. I like the `$ twtxt` command, because it's handy, although many times I edit the file manually with `micro`.\n\nThe last thing was to add the DAT archive to the seeding list on my Hashbase instance running in a [DO Droplet](https://www.digitalocean.com/products/droplets/) and voilà, I got a **twtxt** feed that's updated in real-time and still usable while offline.\n\nI also use the [Hallway](https://webring.xxiivv.com/hallway.html) to follow what my Merveilles friends are “tweeting” and to discover new people. If we combine all these: **twtxt**, DAT and The Hallway, we arrive at something very similar, but more open, to what Rotonde used to be and that, if you ask me, is a very good and unique thing that we should all care about!\n\n^1^ Equivalent with: other members put enough information into the network\n^2^ Seems like @jim is pretty good at building experiences like this","visible":true,"name":"atomic-social-networks","path":"/content/blog/atomic-social-networks","url":"/blog/atomic-social-networks","files":{},"pages":{}},"/blog/being-a-peer":{"title":"Being a Peer: A Peer's Manifesto","view":"entry","text":"Being a _peer_ isn't specific to the context of technological networks, they only act as an accessible interface for _peers_ to become, live and interact.\n\nThe term _peer_ is defined as \"one that is of equal standing with another\". I like how being a _peer_ obligates equality within its own context. In a shared network everyone must understand the same under their identification as \"_peer_\" and there's nothing else that binds them together stronger.\n\nA man, already in a bar, walks to someone sitting at a table. \"Hello, I'm _your_ _peer_.\" The other man at the table responds. \"Good afternoon\\! I am _your_ _peer_ too.\" They shake hands, then become life\\-long friends and maybe, who knows, die in war together.\n\nThey both know what does it mean to be _peers_. It's not easy, but it's nonetheless right. \n\nBeing a _peer_ means that I support you and I know that you support me, because we're in this together. Being a _peer_ means that I don't want to win and prove that I'm better than you, because I want _us_ to get along and do _our_ thing. Being a _peer_ means that I don't bind what I have to _myself_, but to the common value _we_ share.\n\nIn the context of the web, _we_ is the network / protocol itself. As long as I have a computer and a connection \\(local or global\\), I'm the same member of that network as everyone else, independent from my own past and future. I'm a part of the network right NOW. I'm free to disconnect and to reconnect, whenever I feel like.\n\nI'm free to read and explore the network AND I'm also free to write to it and change it.\n\nAs a _peer_ I can show you my real support and appreciation. Not with \"Like\" and \"Favorite\" buttons, but with storage on my computer and bandwidth on my network. I think there's no more appropriate way to express your agreement with someone over the web right now than seeding their site.\n\nAs a _peer_ who's also a developer, I make tools that try to give my _peers_ more fluid ways to interact with the others. The tools aren't mine, they only had been until I've shared them with the network. If a _peer_ thinks that something could be done better, the _peer_ takes what _we_ already have, corrects its mistakes, makes it better, then gives it back to _us_.\n\nSeriously, I want my tools to be redundant and outdated. I want you to make something better than what I've made.\n\nOne of the hardest things about being a _peer_ is to remain that when we tend to naturally delude our superiority. To give as much as we take and maximise that within our needs and limitations. Being a peer should always be about _us_ and not about _me_.\n\nTo some extent, we're all _peers_ as members of humanity. Why don't we transform this attitude to the humans we are on the web too?\n\nMaybe all that I wrote is false, rubbish and for sure it cannot be more than my personal opinion. But I can promise: I'm _your peer_ to the greatest extent.\n\n### Further Reading\n\n* [\"peer\"](https://paper.dropbox.com/doc/peer-oIEm9coe4tCd2L0TyO7p6) by [Callil](https://callil.com/) & friends, a more concrete example and technological point\\-of\\-view over being a _peer_ and about the future of computing in general\n\n---\n\n*This post was cross-published from [Reading Supply](https://reading.supply/@kodedninja/being-a-peer-a-peers-manifesto-QtJthg)*.","location":"Linz","date":"2019-02-18","visible":true,"excerpt":"Lately, I've been identifying myself as a _peer_. It's a way to communicate my support and interest towards peer\\-to\\-peer networks, but I always knew that this identity doesn't end here. It deeply includes my attitude towards people, ownership, computers and the web.","name":"being-a-peer","path":"/content/blog/being-a-peer","url":"/blog/being-a-peer","files":{},"pages":{}},"/blog/ntain":{"title":"ntain ― a peer-to-peer file sharing site","view":"entry","date":"2017-11-10","location":"Odorheiu Secuiesc","excerpt":"My first try at building a peer-to-peer application based on [Beaker Browser](https://beakerbrowser.com) ― a retrospection.\n\n_This entry was written one year after the events, as it's a very important period and I missed it from my timeline._","text":"One night I've found many #rotonde tweets with beautiful 64 characters long URL-ish texts in my feed. A few minutes later I've found out that it's a little, \"underground\" social-network. It was peer-to-peer, something I've been interested in for a while, so I've downloaded [Beaker Browser](https://beakerbrowser.com) in an instant and made my profile. It was a slightly abstract way of joining a social-network, love at first sight.\n\nAnd then there were features to build, bugs to fix ― so I've cloned the [repo on GitHub](https://github.com/rotonde) and started contributing. They weren't important, core features, just little \"fine-tunes\", but they made me feel happy and curious.\n\n_It was the time just before the rise of the peer-to-peer web, there were only a few applications and personal sites started to appear on the **dat://** protocol._\n\nSomehow I've hacked together a little site, using the `DatArchive` API that lets you share files easily and beautifully. Honestly, its design was the reason why I've made it. Basically it's just an interface that renders the content of a directory and an event callback for `ondrop` that \"uploads\" the file to the archive. The whole thing made with jQuery.\n\n![Screenshot of the interface of ntain](/content/blog/ntain/ntain.png)\n\nBut (and this is a very important \"but\"), it felt like some yet hidden power on the internet. I was there in my room, launching a modern file-sharing application without the need of a server and buying a domain name. Instantly, the feeling of \"we're building a new internet, just like in the '90s\" rushed through me.\n\nI've shared it on Twitter and people actually liked and used it.\n\n_If ntain were a baby, then everything I've made since then for the peer-to-peer web would be its periods of growing up. It had a determinate role to my current life._\n\n---\n\n[Repository](https://github.com/kodedninja/ntain)\n\n[dat://ntain-kodedninja.hashbase.io](dat://ntain-kodedninja.hashbase.io)","visible":true,"name":"ntain","path":"/content/blog/ntain","url":"/blog/ntain","files":{"ntain.png":{"name":"ntain","path":"/content/blog/ntain/ntain.png","url":"/blog/ntain/ntain.png","source":"/content/blog/ntain/ntain.png","extension":".png","filename":"ntain.png","type":"image"}},"pages":{}},"/blog/pictogon":{"title":"Redefining image maps","view":"entry","date":"2017-10-20","location":"Odorheiu Secuiesc","excerpt":"Once upon a time images appeared on websites with interactive areas inside. They were called _image maps_.\n\nDuring the summer of 2017, together with my friend and mentor [Csaba](https://codecanyon.net/user/sekler) we've created [Pictogon](https://pictogon.com) ― a modern image map editor.","text":"\"In HTML and XHTML, an image map is a list of coordinates relating to a specific image, created in order to hyperlink areas of the image to different destinations (as opposed to a normal image link, in which the entire area of the image links to a single destination).\" ― [Wikipedia](https://en.wikipedia.org/wiki/Image_map)\n\nI think image maps actualized a desire many of us have: to make something eternally static (object, image) interactive and alive. Sadly, they didn't spread out on the web and searching for clickable areas on an image isn't a habbit. The reason behind these might be the timing and the tools of the age. If you check the [\"Creation and use section\"](https://en.wikipedia.org/wiki/Image_map#Creation_and_use) of the Wikipedia article, you'll see that the recommended programs for image map creation are Dreamweaver, KDE and GIMP (with a plugin). Tools that aren't used anymore or took a turn in an other direction.\n\nSo my good friend Csaba wanted to make a proper, modern, web-based image-map editor and asked me to help with building the stack.\n\n![A screenshot of the Pictogon interface](/content/blog/pictogon/Pictogon.png)\n\nIt was fun not only because we built a finished product from scratch in a relatively short period of time, but also because it was the first larger-scale project I've worked on (as for most 18 years olds). As it was just a secondary project for Csaba, I designed the whole infrastructure, built the backend and a part of the front-end, while he designed and coordinated everything with precision. I even built a working recurring billing system!\n\nWe tried to keep everything as simple as possible. An image map editor shouldn't be complicated anyways. You have an image → draw some polygons on it → set their content → save → get the embed code or download → put it onto your website.\n\nWe've also experimented with alternative solutions for the upcoming problems (some of them worked out, some of the didn't). For example we didn't want to spend energy, money and computing power on hosting images. They're large and there are enough hosting services on the web (most users have a website with its own storage, why would they also pay for storing images somewhere else?). So you can only input the URL of an image as a starting point. Pictogon will never store the file, it's just a middle layer, between an image and the frontend, that turns the former into an interactive object.\n\nWe decided to let users download the result and handle the embedding part by themselves. **It's a tool, not a platform.**\n\nWe've released Pictogon (into the wild) on 5. October via [Product Hunt](https://www.producthunt.com/posts/pictogon) (which is the only marketing we've done) and luckily people liked it. So much that it became \"Product of the Day\" and \"#3 Product of the Week\".\n\n### Technical details\n\nThe image maps are `<svg>` elements with the image, a bunch of polygons and a script inside.\n\nThe frontend was built with [jQuery](https://jquery.com) (I know, it wasn't my decision), the editor was built by us from the ground up. The backend is vanilla PHP.\n\n---\n\n### Update\n\nAs of today ― November 02, 2018 ― Pictogon is a settling puddle in our hearts. After its successful launch we were motivated for a few months, but we've started to neglect and don't care. Maybe, it wasn't fully finished at the release and we were tired of it to finish afterwards. I also started digging into building for the peer-to-peer web around that time (and haven't stopped since then). I love this product and hope that someday I can, maybe, rebuild it and relaunch it. Pictogon 2.0, sometime, maybe.","visible":true,"name":"pictogon","path":"/content/blog/pictogon","url":"/blog/pictogon","files":{"Pictogon.png":{"name":"Pictogon","path":"/content/blog/pictogon/Pictogon.png","url":"/blog/pictogon/Pictogon.png","source":"/content/blog/pictogon/Pictogon.png","extension":".png","filename":"Pictogon.png","type":"image"}},"pages":{}},"/blog/reverse-engineering-future-into-daily-tasks":{"title":"Reverse-Engineering Future Into Daily Tasks","view":"entry","text":"I always try to make my tomorrows better, more efficient and don't waste days with stagnation. At the beginning of the year I've introduced a _framework_ into my life. Its purpose is to assist me in working on the tasks and focus on the habits that help me overcome this stagnation. \n\nThe _framework_ is based on [reverse\\-engineering](https://en.wikipedia.org/wiki/Reverse_engineering). Your daily tasks are the outcomes of your current definition of the perfect day / perfect life. \n\nUsing the framework makes the question mentioned above redundant.\n\n[Angela Lee Duckworth defines grit](https://www.ted.com/talks/angela_lee_duckworth_grit_the_power_of_passion_and_perseverance) as \"passion and perseverance for very long term goals\". The framework outputs comprehensible tasks every day and shows your progress to keep you motivated. With grit you can stick to habbits, be more productive and achieve awesome goals.\n\n\n## The Framework\n\n\nAs it uses reverse\\-engineering, we start from what we want to achieve and deconstruct that into smaller steps. I'll go through the building blocks from top to bottom, from big to smallest.\n\n\n### The Dream Day\n\n\nIt's a common technique to take a piece of paper and write down your \"dream day\" in detail. This helps you see what's important in your life and where should you put more energy. What would you do on the day that you call perfect? Got it? Perfect\\! Let's work for it.\n\nKeep in mind that your energy and time is finite in a day — this may help in filtering out a few less important actions.\n\nThe goal of this is to find and define a few _hypergoals_, the main pillars of the framework. Theoretically you can subtract your current day from the dream day and based on the difference you should be able to derive the possible _hypergoals_.\n\n`hypergoals = Derivative(dreamDay - currentDay)`\n\n\n### _Hypergoals_\n\n\n_Hypergoals_ are not easy to describe. They're goals in the far future that are always present in your life, but never visible. They're always at the back of your mind, but they never directly manipulate your decisions. \n\nIf a goal is a point, a _hypergoal_ is a line going through that. It's not your destination, but the direction your destination lays.\n\nAfter you define a few _hypergoals_ in your life, they should assist you at making decisions. They shouldn't put any friction in your life, but guide you in darker times.\n\n\n### Yearly Focuses\n\n\nAfterwards you should define a few areas of focus in the current year \\(or throughout an extended period\\). These are usually close to your _hypergoals_, but they're achievable and more precise.\n\nPersonal Example:\n\nFor this year I've set out a single goal: to focus on myself. I want my year to be as  as possible. I've stopped emphasizing the activities that produce output and started focusing on those that move me in the direction of the human I want to be. This should be a year of inputs.\n\nAs it's a pretty vague goal, I'll try to achieve it by sticking to three habits:\n\n1. Read at least 2 books each month \\(= 24 in the year\\)\n2. Focus more on what I eat, spend more time with cooking and change to a vegetarian diet\n3. Bring running back to my life \\(after a few months of laziness\\)\n\n\n\n### Bullet Journal\n\n\nThe next layer of the framework is the [Bullet Jornal](https://bulletjournal.com/) \\(BuJo\\). This is only my preference and it shouldn't be hard to swap it out with another similar technique.\n\nWith following the BuJo system, you define and keep track of your Monthly Goals and Daily Tasks.\n\n\n### Monthly Goals\n\n\nMonthly Goals are well\\-defined goals and tasks fixed at the beginning of each month. The [BuJo documentation](https://bulletjournal.com/pages/learn) describes how they work in more detail.\n\nThis is the most critical moment\\! You must carefully pick your Monthly Goals — the usefulness of your day\\-to\\-day tasks depends on this. It's the moment of thinking about the bigger picture your Yearly Focuses and _hypergoals_ provide.\n\nAfter they're fixed, you don't have think about them again. Using the BuJo should make it natural to complete these goals.\n\n\n### Daily Tasks \\+ MIT\n\n\nDaily Tasks also follow the general BuJo method with the additional use of the \"**M**ost **I**mportant **T**asks\" technique. MIT gives you a better perspective to define how to distribute your daily focus.\n\nEvery day, define and mark a few tasks that should occupy the major part of your focus. If you complete all of them, the day was successful. One MIT is more important than all non\\-marked tasks together.\n\nDoing this has several benefits:\n\n* Always answers the question of \"what do I do next?\"\n* Ensures that what you've done has a positive impact on your life\n* Keeps track of what you  done \\(the paper doesn't forget\\)\n* Keeps your mind uncluttered\n\n\n\n### Review & Reiterate\n\n\nYou should spend some time at the end of each month with finding possible improvements.\n\nAs mentioned many times: this is a framework. You must adapt it to your needs and not inversely. \n\n\n## ✌️\n\n\n*This post was cross-published from [Reading Supply](https://reading.supply/@kodedninja/reverse-engineering-future-into-daily-tasks-V6m9WD).*","excerpt":"An introduction to the framework I use to work on meaningful tasks every day.\n\nAlmost every night I go to bed with a question: \"did this day contribute to the future I would like to live?\".","location":"Linz","date":"2019-02-14","visible":true,"name":"reverse-engineering-future-into-daily-tasks","path":"/content/blog/reverse-engineering-future-into-daily-tasks","url":"/blog/reverse-engineering-future-into-daily-tasks","files":{},"pages":{}},"/blog/update":{"title":"2019 Notes","view":"entry","date":"2019-03-30","location":"Linz","excerpt":"At the beginning of the year I've set out to stop chasing my productive habbits, mostly out of the frustration of unhealthy eating and a growing [reading list](https://are.na/hunor-karaman/want-to-read-u8qku8vpli). _\"A year of inputs, instead of outputs\"_, I've said. It hit me as a surprise that, even though I was able to focus on these habbits, February and March were highly productive periods. It was a natural state: I had _things to say_ ― or to make.","text":"But now I'm back on calm, unproductive waters and I feel happy, relaxed and satisfied. That is hard to achieve if you were chasing those productive days for so long. Instead of coming home from work and continue coding until night, I come home, go for a run (if you're interested [here's my Strava](https://www.strava.com/athletes/14194217)), cook and read (most days in this order). I've set out easy, but consistent monthly goals that should keep me motivated through-out the year, so I still have some time to work on personal projects if I feel like. Also, on the side, I spend more time with writing, mostly personal notes that will never be published, but together they act as a mirror of my day-to-day thoughts.\n\nJust wanted to note this down, if anyone's surprised why sometimes I'm missing from the internet. The reason is simple: I try to spend more time with observing _my inside_, instead of _the outside_.","visible":true,"name":"update","path":"/content/blog/update","url":"/blog/update","files":{},"pages":{}},"/manifesto":{"title":"Manifesto","view":"default","banner":true,"text":"1. **Everything should be a tool.** A tool transforms data without adding to its original limitations. It's a function: returns an output for a given input.\n2. **A great tool is [ambient](https://are.na/alex-singh/ambient-product-design).** It should disappear and flow through your actions. You should never need it because it's always at your hands. You should never ignore it because it's never in your way.\n3. **Tools should be adaptable, changeable and personalisable**. If a tool does not perfectly fit your needs, you should be able to change, mix or remove its parts.\n4. **Data should be reusable, text-editable, human-readable.** Produces a higher chance that (1.) is passed.\n5. **Tools should be lightweight, available and timeless.** Computing power or internet speed shouldn't be the limitation for most tasks. It works in the past and in the future.\n6. **Tools should redound to their own redundancy.** Although it's still usable (5.), a tool should redound the total disappearing of the problem or the birth of better tools. A tool should become useless and disappear as fast as possible.\n\n> \"Only through open sources, open standards, human-readable formats and their independencies, might they survive this fleeting age of self-destructing informatics.\" ― Devine Lu Linvega","showonwiki":true,"short":"Rules to follow when making","name":"manifesto","path":"/content/manifesto","url":"/manifesto","files":{},"pages":{}},"/p2p":{"title":"Peer-to-Peer","view":"default","banner":true,"text":"I try to keep this page updated about my <u>current</u> interests within the peer-to-peer web space.\n\nIn the past I've built a few applications that express some of the possibilities of the peer-to-peer web. Although, it was an amazing experience and I'm proud of what I've made, I also see this (focusing so much on making) as a mistake. That's why my current interests have changed from *more building* to *more thinking*.\n\n### Currently\n\nI'm not working on any projects related to the peer-to-peer web.\n\n### Previously I've made\n\n1. [Pears](https://github.com/as-dr/pears) ― A peer-to-peer, temporary, collaborative playlist, 2018―2019\n2. [present](https://github.com/kodedninja/present) ― Peer-to-Peer text-to-presentation tool, 2018\n3. [seeder](https://github.com/new-computers/seeder) ― Plug-and-play Raspberry Pi DAT seeder, 2018\n4. [ridder](https://github.com/kodedninja/ridder) ― An RSS reader that you own, 2018\n5. [solo](https://github.com/kodedninja/solo) ― The simplest publication tool, 2018\n6. [orkl](https://github.com/kodedninja/orkl) ― Super simple peer-to-peer blogging site, 2018\n7. [ntain](https://github.com/kodedninja/ntain) ― Peer-to-Peer file sharing site, 2017\n\nSome other projects on my [GitHub](https://github.com/kodedninja).","short":"Keeping track of my work in the peer-to-peer web space","showonwiki":true,"name":"p2p","path":"/content/p2p","url":"/p2p","files":{},"pages":{}},"/wiki":{"title":"Wiki","view":"wiki","text":"Collection of additional notes, thoughts, logs.","name":"wiki","path":"/content/wiki","url":"/wiki","files":{},"pages":{"readings":{"name":"readings","path":"/content/wiki/readings","url":"/wiki/readings","source":"/content/wiki/readings"},"workstation":{"name":"workstation","path":"/content/wiki/workstation","url":"/wiki/workstation","source":"/content/wiki/workstation"}}},"/wiki/readings":{"title":"Readings","view":"default","text":"For the books I'm planning to read visit [this channel](https://www.are.na/hunor-karaman/want-to-read-u8qku8vpli) on Are.na.\n\n<u>Currently Reading</u>\n\nSamuel Scheffler ― **\"Death & the Afterlife\"**\n\n<u>2019</u>\n\nJames P. Carse ― **\"Finite and Infinite Games\"**\nStephen Hawking ― **\"A Brief History of Time\"**\nHaruki Murakami ― **\"The Wind-Up Bird Chronicle\"**\nJón Kalman Stefánsson ― **\"Fish Have No Feet\"**\nHaruki Murakami ― **\"What I Talk About When I Talk About Running\"**\nLászló Krasznahorkai ― **\"Sátántangó\" / \"Satantango\"**\nPéter Esterházy ― **\"Hasnyálmirigynapló\"**\nHaruki Murakami ― **\"Kafka on the Shore\"**\nRainer Maria Rilke ― **\"Letters To A Young Poet\"**\nMartin Heidegger ― **\"The Question Concerning Technology\"**\nHaruki Murakami ― **\"Hard-Boiled Wonderland and the End Of The World\"**\nFranz Enzenhofer ― **\"Understanding SEO\"**\nYuval Noah Harari ― **\"Homo Deus\"**\n\n<u>2018</u>\n\nAttila Bartis ― **\"A Nyugalom\"**\nLászló Potozky ― **\"Éles\"**\nJean-Paul Sartre ― **\"Nausea\"**\nImre Madách ― **\"Az Ember Tragédiája\" / \"The Tragedy of Man\"**\nAlain de Botton ― **\"Essays on Love\"**\nMichel Houellebecq ― **\"The Map and the Territory\"**\nArthur Schopenhauer ― **\"The Metaphysics of Love\"**\nKurt Vonnegut ― **\"Slaughterhouse-Five\"**\nLászló Potozky ― **\"Égéstermék\"**\nMichel Houellebecq ― **\"The Possibility of an Island**\"","showonwiki":true,"short":"Tracking the books I read","name":"readings","path":"/content/wiki/readings","url":"/wiki/readings","files":{},"pages":{}},"/wiki/workstation":{"title":"Workstation","view":"default","short":"The tools and apps I use","showonwiki":true,"text":"I currently use a 2015 Macbook Pro 13\" with 8GB of RAM and 2.7Ghz i5 processor.\n\n### GUI\n\n- Browser: [Firefox](https://mozilla.org/firefox) / [Beaker](https://beakerbrowser.com/)\n- Terminal: [Hyper](https://hyper.is/)\n- Text Editor: [Atom](https://atom.io/)\n- Design: [Figma](https://figma.com)\n- Window Manager: [Spectacle](https://www.spectacleapp.com/)\n- Audio Workstation: [Ableton Live](https://ableton.com/live)\n- Music: [Spotify](https://spotify.com/)\n- Video Player: [IINA](https://lhc70000.github.io/iina/)\n- Calculator: [Numi](https://numi.io/)\n- Chat: [Telegram](https://telegram.org)\n\n### CLI\n\n- Text Editor: [micro](https://github.com/zyedidia/micro)\n- npm publish: [np](https://github.com/sindresorhus)\n- Git: [dotfiles](https://github.com/kodedninja/dotfiles)\n- Node Version Manager: [n](https://github.com/tj/n)\n- Domains: [now](https://github.com/zeit/now-cli)\n- Music: [cmus](https://cmus.github.io/)\n- Misc: [`youtube-dl`](https://github.com/rg3/youtube-dl)\n\n### [Beaker](https://beakerbrowser.com) Apps\n\n- Writing: [Enoki](https://enoki.site) / [orkl](https://github.com/kodedninja/orkl)\n- Reading: [Dropout](https://github.com/jondashkyle/dropout-app)\n- Consuming Feeds: [Hardly Everything](https://hardlyeverything.com)\n\nFor the libraries I usually use, go to [this repo](https://github.com/kodedninja/weapons).","name":"workstation","path":"/content/wiki/workstation","url":"/wiki/workstation","files":{},"pages":{}},"/":{"title":"Hunor Karamán","view":"home","text":"I’m a _digital explorer_ working on experimental projects with small footprint,  fast websites & solutions for the peer-to-peer web.\n\n---\n\n## Currently\n\nWeb-developer at [GeoGebra](https://geogebra.org), 2018―\n\n## Previously\n\nExperimenting with [peer-to-peer tools](/p2p), 2017―2019\nCo-Made [Pictogon](https://pictogon.com), 2017\n\n\n---\n\nI'm present on [GitHub](https://github.com/kodedninja), [Are.na](https://are.na/hunor-karaman), [Mastodon](https://merveilles.town/@kodedninja) and [twtxt](https://t.seed.hex22.org/twtxt.txt).\nYou can contact me via [email](mailto:karamanhunor@pm.me).\n\nEverything I make should pass most of the criterias in my [Manifesto](/manifesto).\n\nI’m a peer.\n\n---\n\nBuilt with [Enoki](https://enoki.site/) & [Choo](https://choo.io/).\n\nThe site is part of a <a href=\"https://webring.xxiivv.com/#random\" target=\"_blank\">Webring</a>.\n\n---\n\n<span class=\"wwb\">dat://88966b0c7b932d6082c5166e43be46c0d8a1d396226418b6bac358e387ddd2ab/</span>","name":"content","path":"/content","url":"/","files":{},"pages":{"blog":{"name":"blog","path":"/content/blog","url":"/blog","source":"/content/blog"},"manifesto":{"name":"manifesto","path":"/content/manifesto","url":"/manifesto","source":"/content/manifesto"},"p2p":{"name":"p2p","path":"/content/p2p","url":"/p2p","source":"/content/p2p"},"wiki":{"name":"wiki","path":"/content/wiki","url":"/wiki","source":"/content/wiki"}}}}